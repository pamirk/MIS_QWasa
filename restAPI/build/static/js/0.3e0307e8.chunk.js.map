{"version":3,"sources":["DashboardAnalysis/components/Charts/autoHeight.tsx","DashboardAnalysis/components/Charts/Bar/index.tsx","DashboardAnalysis/components/Charts/ChartCard/index.tsx","DashboardAnalysis/components/Charts/Field/index.tsx","DashboardAnalysis/components/Charts/Gauge/index.tsx","DashboardAnalysis/components/Charts/MiniArea/index.tsx","DashboardAnalysis/components/Charts/MiniBar/index.tsx","DashboardAnalysis/components/Charts/MiniProgress/index.tsx","DashboardAnalysis/components/Charts/Pie/index.tsx","DashboardAnalysis/components/Charts/TagCloud/index.tsx","DashboardAnalysis/components/Charts/TimelineChart/index.tsx","DashboardAnalysis/components/Charts/WaterWave/index.tsx","DashboardAnalysis/components/Charts/index.tsx","DashboardAnalysis/components/Charts/index.less","DashboardAnalysis/components/Charts/Field/index.less"],"names":["computeHeight","node","style","height","parseInt","getComputedStyle","paddingTop","paddingBottom","getAutoHeight","n","parentNode","autoHeight","WrappedComponent","state","computedHeight","root","undefined","handleRoot","this","props","h","setState","ref","React","Component","Bar","autoHideXLabels","resize","Debounce","canvasWidth","clientWidth","data","autoLabel","minWidth","length","handleRef","window","addEventListener","passive","removeEventListener","title","forceFit","color","padding","className","styles","chart","marginBottom","scale","x","type","y","min","name","label","tickLine","showTitle","crosshairs","position","tooltip","value","renderTotal","total","totalDom","ChartCard","renderContent","contentHeight","avatar","action","footer","children","loading","classNames","rest","bodyStyle","Field","field","number","Arc","Guide","Html","Line","defaultFormatter","val","Shape","registerShape","drawShape","cfg","group","point","points","parsePoint","center","addShape","attrs","x1","y1","x2","y2","stroke","lineWidth","lineCap","r","fill","percent","formatter","bgColor","max","tickCount","nice","startAngle","Math","PI","endAngle","radius","line","subTickLine","zIndex","offset","textStyle","fontSize","textAlign","start","end","lineStyle","lineDash","html","toFixed","shape","active","borderColor","borderWidth","xAxis","yAxis","animate","scaleProps","range","chartHeight","key","grid","fillOpacity","size","display","MiniProgress","targetLabel","target","strokeWidth","left","backgroundColor","width","Pie","legendData","legendBlock","requestRef","hasLegend","getG2Instance","requestAnimationFrame","getLegendData","geom","getAllGeoms","get","map","item","origin","_origin","checked","handleLegendClick","i","newItem","filteredLegendData","filter","l","indexOf","preProps","cancelAnimationFrame","cancel","formatColor","valueFormat","subTitle","inner","colors","pieClassName","propsData","selected","propsSelected","defaultColors","parseFloat","dv","DataView","source","transform","dimension","as","maxFontSize","onGetG2Instance","innerRadius","p","onClick","Number","isNaN","imgUrl","TagCloud","isUnmount","imageMask","renderChart","saveRootRef","initTagCloud","container","opacity","rotate","text","fontFamily","font","textBaseline","getTextAttrs","nextProps","w","offsetWidth","onload","DataSet","View","fields","timeInterval","d","Image","crossOrigin","src","JSON","stringify","stateHeight","reflect","titleMap","sourceData","Array","isArray","sort","a","b","ds","createView","callback","obj","date","row","newRow","timeScale","tickInterval","mask","cols","marginRight","scales","backgroundChart","onChange","startValue","endValue","WaterWave","radio","timer","innerHTML","self","canvas","ctx","getContext","canvasHeight","cR","beginPath","axisLength","unit","currRange","xOffset","sp","currData","waveupsp","arcStack","bR","circleOffset","circleLock","push","cos","sin","cStartPoint","shift","strokeStyle","moveTo","render","clearRect","temp","lineTo","globalCompositeOperation","arc","save","restore","clip","fillStyle","sinStack","dx","dy","startPoint","gradient","createLinearGradient","addColorStop","drawSin","overflow","yuan","numeral","format","module","exports"],"mappings":"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","file":"static/js/0.3e0307e8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport type IReactComponent<P = any> =\r\n    | React.StatelessComponent<P>\r\n    | React.ComponentClass<P>\r\n    | React.ClassicComponentClass<P>;\r\n\r\nfunction computeHeight(node: HTMLDivElement) {\r\n    const { style } = node;\r\n    style.height = '100%';\r\n    const totalHeight = parseInt(`${getComputedStyle(node).height}`, 10);\r\n    const padding =\r\n        parseInt(`${getComputedStyle(node).paddingTop}`, 10) +\r\n        parseInt(`${getComputedStyle(node).paddingBottom}`, 10);\r\n    return totalHeight - padding;\r\n}\r\n\r\nfunction getAutoHeight(n: HTMLDivElement | undefined) {\r\n    if (!n) {\r\n        return 0;\r\n    }\r\n\r\n    const node = n;\r\n\r\n    let height = computeHeight(node);\r\n    const parentNode = node.parentNode as HTMLDivElement;\r\n    if (parentNode) {\r\n        height = computeHeight(parentNode);\r\n    }\r\n\r\n    return height;\r\n}\r\n\r\ninterface AutoHeightProps {\r\n    height?: number;\r\n}\r\n\r\nfunction autoHeight() {\r\n    return <P extends AutoHeightProps>(\r\n        WrappedComponent: React.ComponentClass<P> | React.FC<P>,\r\n    ): React.ComponentClass<P> => {\r\n        class AutoHeightComponent extends React.Component<P & AutoHeightProps> {\r\n            state = {\r\n                computedHeight: 0,\r\n            };\r\n\r\n            root: HTMLDivElement | undefined = undefined;\r\n\r\n            componentDidMount() {\r\n                const { height } = this.props;\r\n                if (!height) {\r\n                    let h = getAutoHeight(this.root);\r\n                    this.setState({ computedHeight: h });\r\n                    if (h < 1) {\r\n                        h = getAutoHeight(this.root);\r\n                        this.setState({ computedHeight: h });\r\n                    }\r\n                }\r\n            }\r\n\r\n            handleRoot = (node: HTMLDivElement) => {\r\n                this.root = node;\r\n            };\r\n\r\n            render() {\r\n                const { height } = this.props;\r\n                const { computedHeight } = this.state;\r\n                const h = height || computedHeight;\r\n                return (\r\n                    <div ref={this.handleRoot}>\r\n                        {h > 0 && <WrappedComponent {...this.props} height={h} />}\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        return AutoHeightComponent;\r\n    };\r\n}\r\nexport default autoHeight;\r\n","import { Axis, Chart, Geom, Tooltip } from 'bizcharts';\r\nimport React, { Component } from 'react';\r\n\r\nimport Debounce from 'lodash.debounce';\r\nimport autoHeight from '../autoHeight';\r\nimport styles from '../index.less';\r\n\r\nexport interface BarProps {\r\n    title: React.ReactNode;\r\n    color?: string;\r\n    padding?: [number, number, number, number];\r\n    height?: number;\r\n    data: {\r\n        x: string;\r\n        y: number;\r\n    }[];\r\n    forceFit?: boolean;\r\n    autoLabel?: boolean;\r\n    style?: React.CSSProperties;\r\n}\r\n\r\nclass Bar extends Component<\r\n    BarProps,\r\n    {\r\n        autoHideXLabels: boolean;\r\n    }\r\n    > {\r\n    state = {\r\n        autoHideXLabels: false,\r\n    };\r\n\r\n    root: HTMLDivElement | undefined = undefined;\r\n\r\n    node: HTMLDivElement | undefined = undefined;\r\n\r\n    resize = Debounce(() => {\r\n        if (!this.node || !this.node.parentNode) {\r\n            return;\r\n        }\r\n        const canvasWidth = (this.node.parentNode as HTMLDivElement).clientWidth;\r\n        const { data = [], autoLabel = true } = this.props;\r\n        if (!autoLabel) {\r\n            return;\r\n        }\r\n        const minWidth = data.length * 30;\r\n        const { autoHideXLabels } = this.state;\r\n\r\n        if (canvasWidth <= minWidth) {\r\n            if (!autoHideXLabels) {\r\n                this.setState({\r\n                    autoHideXLabels: true,\r\n                });\r\n            }\r\n        } else if (autoHideXLabels) {\r\n            this.setState({\r\n                autoHideXLabels: false,\r\n            });\r\n        }\r\n    }, 500);\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('resize', this.resize, { passive: true });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('resize', this.resize);\r\n    }\r\n\r\n    handleRoot = (n: HTMLDivElement) => {\r\n        this.root = n;\r\n    };\r\n\r\n    handleRef = (n: HTMLDivElement) => {\r\n        this.node = n;\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            height = 1,\r\n            title,\r\n            forceFit = true,\r\n            data,\r\n            color = 'rgba(24, 144, 255, 0.85)',\r\n            padding,\r\n        } = this.props;\r\n\r\n        const { autoHideXLabels } = this.state;\r\n\r\n        const scale = {\r\n            x: {\r\n                type: 'cat',\r\n            },\r\n            y: {\r\n                min: 0,\r\n            },\r\n        };\r\n\r\n        const tooltip: [string, (...args: any[]) => { name?: string; value: string }] = [\r\n            'x*y',\r\n            (x: string, y: string) => ({\r\n                name: x,\r\n                value: y,\r\n            }),\r\n        ];\r\n\r\n        return (\r\n            <div className={styles.chart} style={{ height }} ref={this.handleRoot}>\r\n                <div ref={this.handleRef}>\r\n                    {title && <h4 style={{ marginBottom: 20 }}>{title}</h4>}\r\n                    <Chart\r\n                        scale={scale}\r\n                        height={title ? height - 41 : height}\r\n                        forceFit={forceFit}\r\n                        data={data}\r\n                        padding={padding || 'auto'}\r\n                    >\r\n                        <Axis\r\n                            name=\"x\"\r\n                            title={false}\r\n                            label={autoHideXLabels ? undefined : {}}\r\n                            tickLine={autoHideXLabels ? undefined : {}}\r\n                        />\r\n                        <Axis name=\"y\" min={0} />\r\n                        <Tooltip showTitle={false} crosshairs={false} />\r\n                        <Geom type=\"interval\" position=\"x*y\" color={color} tooltip={tooltip} />\r\n                    </Chart>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default autoHeight()(Bar);\r\n","import { Card } from 'antd';\r\nimport { CardProps } from 'antd/es/card';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport './pkindex.css'\r\n\r\ntype totalType = () => React.ReactNode;\r\n\r\nconst renderTotal = (total?: number | totalType | React.ReactNode) => {\r\n  if (!total && total !== 0) {\r\n    return null;\r\n  }\r\n  let totalDom;\r\n  switch (typeof total) {\r\n    case 'undefined':\r\n      totalDom = null;\r\n      break;\r\n    case 'function':\r\n      totalDom = <div className='total'>{total()}</div>;\r\n      break;\r\n    default:\r\n      totalDom = <div className='total'>{total}</div>;\r\n  }\r\n  return totalDom;\r\n};\r\n\r\nexport interface ChartCardProps extends CardProps {\r\n  title: React.ReactNode;\r\n  action?: React.ReactNode;\r\n  total?: React.ReactNode | number | (() => React.ReactNode | number);\r\n  footer?: React.ReactNode;\r\n  contentHeight?: number;\r\n  avatar?: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nclass ChartCard extends React.Component<ChartCardProps> {\r\n  renderContent = () => {\r\n    const { contentHeight, title, avatar, action, total, footer, children, loading } = this.props;\r\n    if (loading) {\r\n      return false;\r\n    }\r\n    return (\r\n      <div className='chartCard'>\r\n        <div\r\n          className={classNames('chartTop', {\r\n            ['chartTopMargin']: !children && !footer,\r\n          })}\r\n        >\r\n          <div className='avatar'>{avatar}</div>\r\n          <div className='metaWrap'>\r\n            <div className='meta'>\r\n              <span className='title'>{title}</span>\r\n              <span className='action'>{action}</span>\r\n            </div>\r\n            {renderTotal(total)}\r\n          </div>\r\n        </div>\r\n        {children && (\r\n          <div className='content' style={{ height: contentHeight || 'auto' }}>\r\n            <div className='contentFixed'>{children}</div>\r\n          </div>\r\n        )}\r\n        {footer && (\r\n          <div className={classNames('footer', {['footerMargin']: !children,})}>\r\n            {footer}\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      loading = false,\r\n      contentHeight,\r\n      title,\r\n      avatar,\r\n      action,\r\n      total,\r\n      footer,\r\n      children,\r\n      ...rest\r\n    } = this.props;\r\n    return (\r\n      <Card loading={loading} bodyStyle={{ padding: '20px 24px 8px 24px' }} {...rest}>\r\n        {this.renderContent()}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartCard;\r\n","import React from 'react';\r\nimport styles from './index.less';\r\n\r\nexport interface FieldProps {\r\n  label: React.ReactNode;\r\n  value: React.ReactNode;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst Field: React.FC<FieldProps> = ({ label, value, ...rest }) => (\r\n  <div className={styles.field} {...rest}>\r\n    <span className={styles.label}>{label}</span>\r\n    <span className={styles.number}>{value}</span>\r\n  </div>\r\n);\r\n\r\nexport default Field;\r\n","import { Axis, Chart, Coord, Geom, Guide, Shape } from 'bizcharts';\r\n\r\nimport React from 'react';\r\nimport autoHeight from '../autoHeight';\r\n\r\nconst { Arc, Html, Line } = Guide;\r\n\r\nexport interface GaugeProps {\r\n  title: React.ReactNode;\r\n  color?: string;\r\n  height?: number;\r\n  bgColor?: number;\r\n  percent: number;\r\n  forceFit?: boolean;\r\n  style?: React.CSSProperties;\r\n  formatter: (value: string) => string;\r\n}\r\n\r\nconst defaultFormatter = (val: string): string => {\r\n  switch (val) {\r\n    case '2':\r\n      return '差';\r\n    case '4':\r\n      return '中';\r\n    case '6':\r\n      return '良';\r\n    case '8':\r\n      return '优';\r\n    default:\r\n      return '';\r\n  }\r\n};\r\n\r\nif (Shape.registerShape) {\r\n  Shape.registerShape('point', 'pointer', {\r\n    drawShape(cfg: any, group: any) {\r\n      let point = cfg.points[0];\r\n      point = (this as any).parsePoint(point);\r\n      const center = (this as any).parsePoint({\r\n        x: 0,\r\n        y: 0,\r\n      });\r\n      group.addShape('line', {\r\n        attrs: {\r\n          x1: center.x,\r\n          y1: center.y,\r\n          x2: point.x,\r\n          y2: point.y,\r\n          stroke: cfg.color,\r\n          lineWidth: 2,\r\n          lineCap: 'round',\r\n        },\r\n      });\r\n      return group.addShape('circle', {\r\n        attrs: {\r\n          x: center.x,\r\n          y: center.y,\r\n          r: 6,\r\n          stroke: cfg.color,\r\n          lineWidth: 3,\r\n          fill: '#fff',\r\n        },\r\n      });\r\n    },\r\n  });\r\n}\r\n\r\nconst Gauge: React.FC<GaugeProps> = props => {\r\n  const {\r\n    title,\r\n    height = 1,\r\n    percent,\r\n    forceFit = true,\r\n    formatter = defaultFormatter,\r\n    color = '#2F9CFF',\r\n    bgColor = '#F0F2F5',\r\n  } = props;\r\n  const cols = {\r\n    value: {\r\n      type: 'linear',\r\n      min: 0,\r\n      max: 10,\r\n      tickCount: 6,\r\n      nice: true,\r\n    },\r\n  };\r\n  const data = [{ value: percent / 10 }];\r\n  const renderHtml = () => `\r\n    <div style=\"width: 300px;text-align: center;font-size: 12px!important;\">\r\n      <p style=\"font-size: 14px; color: rgba(0,0,0,0.43);margin: 0;\">${title}</p>\r\n      <p style=\"font-size: 24px;color: rgba(0,0,0,0.85);margin: 0;\">\r\n        ${(data[0].value * 10).toFixed(2)}%\r\n      </p>\r\n    </div>`;\r\n  const textStyle: {\r\n    fontSize: number;\r\n    fill: string;\r\n    textAlign: 'center';\r\n  } = {\r\n    fontSize: 12,\r\n    fill: 'rgba(0, 0, 0, 0.65)',\r\n    textAlign: 'center',\r\n  };\r\n\r\n  return (\r\n    <Chart height={height} data={data} scale={cols} padding={[-16, 0, 16, 0]} forceFit={forceFit}>\r\n      <Coord type=\"polar\" startAngle={-1.25 * Math.PI} endAngle={0.25 * Math.PI} radius={0.8} />\r\n      <Axis name=\"1\" line={undefined} />\r\n      <Axis\r\n        line={undefined}\r\n        tickLine={undefined}\r\n        subTickLine={undefined}\r\n        name=\"value\"\r\n        zIndex={2}\r\n        label={{\r\n          offset: -12,\r\n          formatter,\r\n          textStyle,\r\n        }}\r\n      />\r\n      <Guide>\r\n        <Line\r\n          start={[3, 0.905]}\r\n          end={[3, 0.85]}\r\n          lineStyle={{\r\n            stroke: color,\r\n            lineDash: undefined,\r\n            lineWidth: 2,\r\n          }}\r\n        />\r\n        <Line\r\n          start={[5, 0.905]}\r\n          end={[5, 0.85]}\r\n          lineStyle={{\r\n            stroke: color,\r\n            lineDash: undefined,\r\n            lineWidth: 3,\r\n          }}\r\n        />\r\n        <Line\r\n          start={[7, 0.905]}\r\n          end={[7, 0.85]}\r\n          lineStyle={{\r\n            stroke: color,\r\n            lineDash: undefined,\r\n            lineWidth: 3,\r\n          }}\r\n        />\r\n        <Arc\r\n          start={[0, 0.965]}\r\n          end={[10, 0.965]}\r\n          style={{\r\n            stroke: bgColor,\r\n            lineWidth: 10,\r\n          }}\r\n        />\r\n        <Arc\r\n          start={[0, 0.965]}\r\n          end={[data[0].value, 0.965]}\r\n          style={{\r\n            stroke: color,\r\n            lineWidth: 10,\r\n          }}\r\n        />\r\n        <Html position={['50%', '95%']} html={renderHtml()} />\r\n      </Guide>\r\n      <Geom\r\n        line={false}\r\n        type=\"point\"\r\n        position=\"value*1\"\r\n        shape=\"pointer\"\r\n        color={color}\r\n        active={false}\r\n      />\r\n    </Chart>\r\n  );\r\n};\r\n\r\nexport default autoHeight()(Gauge);\r\n","import { Axis, Chart, Geom, Tooltip, AxisProps } from 'bizcharts';\r\n\r\nimport React from 'react';\r\nimport autoHeight from '../autoHeight';\r\nimport '../pkindex.css'\r\n\r\n\r\nexport interface MiniAreaProps {\r\n  color?: string;\r\n  height?: number;\r\n  borderColor?: string;\r\n  line?: boolean;\r\n  animate?: boolean;\r\n  xAxis?: AxisProps;\r\n  forceFit?: boolean;\r\n  scale?: {\r\n    x?: {\r\n      tickCount: number;\r\n    };\r\n    y?: {\r\n      tickCount: number;\r\n    };\r\n  };\r\n  yAxis?: Partial<AxisProps>;\r\n  borderWidth?: number;\r\n  data: {\r\n    x: number | string;\r\n    y: number;\r\n  }[];\r\n}\r\n\r\nconst MiniArea: React.FC<MiniAreaProps> = props => {\r\n  const {\r\n    height = 1,\r\n    data = [],\r\n    forceFit = true,\r\n    color = 'rgba(24, 144, 255, 0.2)',\r\n    borderColor = '#1089ff',\r\n    scale = { x: {}, y: {} },\r\n    borderWidth = 2,\r\n    line,\r\n    xAxis,\r\n    yAxis,\r\n    animate = true,\r\n  } = props;\r\n\r\n  const padding: [number, number, number, number] = [36, 5, 30, 5];\r\n\r\n  const scaleProps = {\r\n    x: {\r\n      type: 'cat',\r\n      range: [0, 1],\r\n      ...scale.x,\r\n    },\r\n    y: {\r\n      min: 0,\r\n      ...scale.y,\r\n    },\r\n  };\r\n\r\n  const tooltip: [string, (...args: any[]) => { name?: string; value: string }] = [\r\n    'x*y',\r\n    (x: string, y: string) => ({\r\n      name: x,\r\n      value: y,\r\n    }),\r\n  ];\r\n\r\n  const chartHeight = height + 54;\r\n\r\n  return (\r\n    <div className='miniChart' style={{ height }}>\r\n      <div className='chartContent'>\r\n        {height > 0 && (\r\n          <Chart\r\n            animate={animate}\r\n            scale={scaleProps}\r\n            height={chartHeight}\r\n            forceFit={forceFit}\r\n            data={data}\r\n            padding={padding}\r\n          >\r\n            <Axis\r\n              key=\"axis-x\"\r\n              name=\"x\"\r\n              label={null}\r\n              line={null}\r\n              tickLine={null}\r\n              grid={null}\r\n              {...xAxis}\r\n            />\r\n            <Axis\r\n              key=\"axis-y\"\r\n              name=\"y\"\r\n              label={null}\r\n              line={null}\r\n              tickLine={null}\r\n              grid={null}\r\n              {...yAxis}\r\n            />\r\n            <Tooltip showTitle={false} crosshairs={false} />\r\n            <Geom\r\n              type=\"area\"\r\n              position=\"x*y\"\r\n              color={color}\r\n              tooltip={tooltip}\r\n              shape=\"smooth\"\r\n              style={{\r\n                fillOpacity: 1,\r\n              }}\r\n            />\r\n            {line ? (\r\n              <Geom\r\n                type=\"line\"\r\n                position=\"x*y\"\r\n                shape=\"smooth\"\r\n                color={borderColor}\r\n                size={borderWidth}\r\n                tooltip={false}\r\n              />\r\n            ) : (\r\n              <span style={{ display: 'none' }} />\r\n            )}\r\n          </Chart>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default autoHeight()(MiniArea);\r\n","import { Chart, Geom, Tooltip } from 'bizcharts';\r\n\r\nimport React from 'react';\r\nimport autoHeight from '../autoHeight';\r\nimport '../pkindex.css'\r\n\r\nexport interface MiniBarProps {\r\n  color?: string;\r\n  height?: number;\r\n  data: {\r\n    x: number | string;\r\n    y: number;\r\n  }[];\r\n  forceFit?: boolean;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst MiniBar: React.FC<MiniBarProps> = props => {\r\n  const { height = 0, forceFit = true, color = '#1890FF', data = [] } = props;\r\n\r\n  const scale = {\r\n    x: {\r\n      type: 'cat',\r\n    },\r\n    y: {\r\n      min: 0,\r\n    },\r\n  };\r\n\r\n  const padding: [number, number, number, number] = [36, 5, 30, 5];\r\n\r\n  const tooltip: [string, (...args: any[]) => { name?: string; value: string }] = [\r\n    'x*y',\r\n    (x: string, y: string) => ({\r\n      name: x,\r\n      value: y,\r\n    }),\r\n  ];\r\n\r\n  // for tooltip not to be hide\r\n  const chartHeight = height + 54;\r\n\r\n  return (\r\n    <div className='miniChart' style={{ height }}>\r\n      <div className='chartContent'>\r\n        <Chart scale={scale} height={chartHeight} forceFit={forceFit} data={data} padding={padding}>\r\n          <Tooltip showTitle={false} crosshairs={false} />\r\n          <Geom type=\"interval\" position=\"x*y\" color={color} tooltip={tooltip} />\r\n        </Chart>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default autoHeight()(MiniBar);\r\n","import React from 'react';\r\nimport { Tooltip } from 'antd';\r\nimport './pk.css'\r\n\r\nexport interface MiniProgressProps {\r\n  target: number;\r\n  targetLabel?: string;\r\n  color?: string;\r\n  strokeWidth?: number;\r\n  percent?: number;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\nconst MiniProgress: React.FC<MiniProgressProps> = ({\r\n  targetLabel,\r\n  target,\r\n  color = 'rgb(19, 194, 194)',\r\n  strokeWidth,\r\n  percent,\r\n}) => (\r\n  <div className='miniProgress'>\r\n    <Tooltip title={targetLabel}>\r\n      <div className='target' style={{ left: target ? `${target}%` : undefined }}>\r\n        <span style={{ backgroundColor: color || undefined }} />\r\n        <span style={{ backgroundColor: color || undefined }} />\r\n      </div>\r\n    </Tooltip>\r\n    <div className='progressWrap'>\r\n      <div\r\n        className='progress'\r\n        style={{\r\n          backgroundColor: color || undefined,\r\n          width: percent ? `${percent}%` : undefined,\r\n          height: strokeWidth || undefined,\r\n        }}\r\n      />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MiniProgress;\r\n","import { Chart, Coord, Geom, Tooltip } from 'bizcharts';\r\nimport React, { Component } from 'react';\r\n\r\nimport { DataView } from '@antv/data-set';\r\nimport Debounce from 'lodash.debounce';\r\nimport { Divider } from 'antd';\r\nimport ReactFitText from 'react-fittext';\r\nimport classNames from 'classnames';\r\nimport autoHeight from '../autoHeight';\r\nimport  './pk.css';\r\n\r\nexport interface PieProps {\r\n  animate?: boolean;\r\n  color?: string;\r\n  colors?: string[];\r\n  selected?: boolean;\r\n  height?: number;\r\n  margin?: [number, number, number, number];\r\n  hasLegend?: boolean;\r\n  padding?: [number, number, number, number];\r\n  percent?: number;\r\n  data?: {\r\n    x: string;\r\n    y: number;\r\n  }[];\r\n  inner?: number;\r\n  lineWidth?: number;\r\n  forceFit?: boolean;\r\n  style?: React.CSSProperties;\r\n  className?: string;\r\n  total?: React.ReactNode | number | (() => React.ReactNode | number);\r\n  title?: React.ReactNode;\r\n  tooltip?: boolean;\r\n  valueFormat?: (value: string) => string | React.ReactNode;\r\n  subTitle?: React.ReactNode;\r\n}\r\ninterface PieState {\r\n  legendData: { checked: boolean; x: string; color: string; percent: number; y: string }[];\r\n  legendBlock: boolean;\r\n}\r\nclass Pie extends Component<PieProps, PieState> {\r\n  state: PieState = {\r\n    legendData: [],\r\n    legendBlock: false,\r\n  };\r\n\r\n  requestRef: number | undefined = undefined;\r\n\r\n  root: HTMLDivElement | undefined = undefined;\r\n\r\n  chart: G2.Chart | undefined = undefined;\r\n\r\n  // for window resize auto responsive legend\r\n  resize = Debounce(() => {\r\n    const { hasLegend } = this.props;\r\n    const { legendBlock } = this.state;\r\n    if (!hasLegend || !this.root) {\r\n      window.removeEventListener('resize', this.resize);\r\n      return;\r\n    }\r\n    if (\r\n        this.root &&\r\n        this.root.parentNode &&\r\n        (this.root.parentNode as HTMLElement).clientWidth <= 380\r\n    ) {\r\n      if (!legendBlock) {\r\n        this.setState({\r\n          legendBlock: true,\r\n        });\r\n      }\r\n    } else if (legendBlock) {\r\n      this.setState({\r\n        legendBlock: false,\r\n      });\r\n    }\r\n  }, 400);\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\r\n        'resize',\r\n        () => {\r\n          this.requestRef = requestAnimationFrame(() => this.resize());\r\n        },\r\n        { passive: true },\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(preProps: PieProps) {\r\n    const { data } = this.props;\r\n    if (data !== preProps.data) {\r\n      // because of charts data create when rendered\r\n      // so there is a trick for get rendered time\r\n      this.getLegendData();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.requestRef) {\r\n      window.cancelAnimationFrame(this.requestRef);\r\n    }\r\n    window.removeEventListener('resize', this.resize);\r\n    if (this.resize) {\r\n      (this.resize as any).cancel();\r\n    }\r\n  }\r\n\r\n  getG2Instance = (chart: G2.Chart) => {\r\n    this.chart = chart;\r\n    requestAnimationFrame(() => {\r\n      this.getLegendData();\r\n      this.resize();\r\n    });\r\n  };\r\n\r\n  // for custom lengend view\r\n  getLegendData = () => {\r\n    if (!this.chart) return;\r\n    const geom = this.chart.getAllGeoms()[0]; // 获取所有的图形\r\n    if (!geom) return;\r\n    const items = (geom as any).get('dataArray') || []; // 获取图形对应的\r\n\r\n    const legendData = items.map((item: { color: any; _origin: any }[]) => {\r\n      /* eslint no-underscore-dangle:0 */\r\n      const origin = item[0]._origin;\r\n      origin.color = item[0].color;\r\n      origin.checked = true;\r\n      return origin;\r\n    });\r\n\r\n    this.setState({\r\n      legendData,\r\n    });\r\n  };\r\n\r\n  handleRoot = (n: HTMLDivElement) => {\r\n    this.root = n;\r\n  };\r\n\r\n  handleLegendClick = (item: any, i: string | number) => {\r\n    const newItem = item;\r\n    newItem.checked = !newItem.checked;\r\n\r\n    const { legendData } = this.state;\r\n    // @ts-ignore\r\n    legendData[i] = newItem;\r\n\r\n    const filteredLegendData = legendData.filter(l => l.checked).map(l => l.x);\r\n\r\n    if (this.chart) {\r\n      this.chart.filter('x', val => filteredLegendData.indexOf(`${val}`) > -1);\r\n    }\r\n\r\n    this.setState({\r\n      legendData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      valueFormat,\r\n      subTitle,\r\n      total,\r\n      hasLegend = false,\r\n      className,\r\n      style,\r\n      height = 0,\r\n      forceFit = true,\r\n      percent,\r\n      color,\r\n      inner = 0.75,\r\n      animate = true,\r\n      colors,\r\n      lineWidth = 1,\r\n    } = this.props;\r\n\r\n    const { legendData, legendBlock } = this.state;\r\n    const pieClassName = classNames('pie', className, {\r\n      ['hasLegend']: !!hasLegend,\r\n      ['legendBlock']: legendBlock,\r\n    });\r\n\r\n    const {\r\n      data: propsData,\r\n      selected: propsSelected = true,\r\n      tooltip: propsTooltip = true,\r\n    } = this.props;\r\n\r\n    let data = propsData || [];\r\n    let selected = propsSelected;\r\n    let tooltip = propsTooltip;\r\n\r\n    const defaultColors = colors;\r\n    data = data || [];\r\n    selected = selected || true;\r\n    tooltip = tooltip || true;\r\n    let formatColor;\r\n\r\n    const scale = {\r\n      x: {\r\n        type: 'cat',\r\n        range: [0, 1],\r\n      },\r\n      y: {\r\n        min: 0,\r\n      },\r\n    };\r\n\r\n    if (percent || percent === 0) {\r\n      selected = false;\r\n      tooltip = false;\r\n      formatColor = (value: string) => {\r\n        if (value === '占比') {\r\n          return color || 'rgba(24, 144, 255, 0.85)';\r\n        }\r\n        return '#F0F2F5';\r\n      };\r\n\r\n      data = [\r\n        {\r\n          x: '占比',\r\n          y: parseFloat(`${percent}`),\r\n        },\r\n        {\r\n          x: '反比',\r\n          y: 100 - parseFloat(`${percent}`),\r\n        },\r\n      ];\r\n    }\r\n\r\n    const tooltipFormat: [string, (...args: any[]) => { name?: string; value: string }] = [\r\n      'x*percent',\r\n      (x: string, p: number) => ({\r\n        name: x,\r\n        value: `${(p * 100).toFixed(2)}%`,\r\n      }),\r\n    ];\r\n\r\n    const padding = [12, 0, 12, 0] as [number, number, number, number];\r\n\r\n    const dv = new DataView();\r\n    dv.source(data).transform({\r\n      type: 'percent',\r\n      field: 'y',\r\n      dimension: 'x',\r\n      as: 'percent',\r\n    });\r\n\r\n    return (\r\n        <div ref={this.handleRoot} className={pieClassName} style={style}>\r\n          <ReactFitText maxFontSize={25}>\r\n            <div className='chart'>\r\n              <Chart\r\n                  scale={scale}\r\n                  height={height}\r\n                  forceFit={forceFit}\r\n                  data={dv}\r\n                  padding={padding}\r\n                  animate={animate}\r\n                  onGetG2Instance={this.getG2Instance}\r\n              >\r\n                {tooltip && <Tooltip showTitle={false} />}\r\n                <Coord type=\"theta\" innerRadius={inner} />\r\n                <Geom\r\n                    style={{ lineWidth, stroke: '#fff' }}\r\n                    tooltip={tooltip ? tooltipFormat : undefined}\r\n                    type=\"intervalStack\"\r\n                    position=\"percent\"\r\n                    color={['x', percent || percent === 0 ? formatColor : defaultColors] as any}\r\n                    selected={selected}\r\n                />\r\n              </Chart>\r\n\r\n              {(subTitle || total) && (\r\n                  <div className='total'>\r\n                    {subTitle && <h4 className=\"pie-sub-title\">{subTitle}</h4>}\r\n                    {/* eslint-disable-next-line */}\r\n                    {total && (\r\n                        <div className=\"pie-stat\">{typeof total === 'function' ? total() : total}</div>\r\n                    )}\r\n                  </div>\r\n              )}\r\n            </div>\r\n          </ReactFitText>\r\n\r\n          {hasLegend && (\r\n              <ul className='legend'>\r\n                {legendData.map((item, i) => (\r\n                    <li key={item.x} onClick={() => this.handleLegendClick(item, i)}>\r\n                <span\r\n                    className='dot'\r\n                    style={{\r\n                      backgroundColor: !item.checked ? '#aaa' : item.color,\r\n                    }}\r\n                />\r\n                      <span className='legendTitle'>{item.x}</span>\r\n                      <Divider type=\"vertical\" />\r\n                      <span className='percent'>\r\n                  {`${(Number.isNaN(item.percent) ? 0 : item.percent * 100).toFixed(2)}%`}\r\n                </span>\r\n                      <span className='value'>{valueFormat ? valueFormat(item.y) : item.y}</span>\r\n                    </li>\r\n                ))}\r\n              </ul>\r\n          )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default autoHeight()(Pie);\r\n","import { Chart, Coord, Geom, Shape, Tooltip } from 'bizcharts';\r\nimport React, { Component } from 'react';\r\n\r\nimport DataSet from '@antv/data-set';\r\nimport Debounce from 'lodash.debounce';\r\nimport classNames from 'classnames';\r\nimport autoHeight from '../autoHeight';\r\nimport  './pk.css';\r\n\r\n/* eslint no-underscore-dangle: 0 */\r\n/* eslint no-param-reassign: 0 */\r\n\r\nconst imgUrl = 'https://gw.alipayobjects.com/zos/rmsportal/gWyeGLCdFFRavBGIDzWk.png';\r\n\r\nexport interface TagCloudProps {\r\n  data: {\r\n    name: string;\r\n    value: number;\r\n  }[];\r\n  height?: number;\r\n  className?: string;\r\n  style?: React.CSSProperties;\r\n}\r\n\r\ninterface TagCloudState {\r\n  dv: any;\r\n  height?: number;\r\n  width: number;\r\n}\r\n\r\nclass TagCloud extends Component<TagCloudProps, TagCloudState> {\r\n  state = {\r\n    dv: null,\r\n    height: 0,\r\n    width: 0,\r\n  };\r\n\r\n  isUnmount: boolean = false;\r\n\r\n  requestRef: number = 0;\r\n\r\n  root: HTMLDivElement | undefined = undefined;\r\n\r\n  imageMask: HTMLImageElement | undefined = undefined;\r\n\r\n  componentDidMount() {\r\n    requestAnimationFrame(() => {\r\n      this.initTagCloud();\r\n      this.renderChart(this.props);\r\n    });\r\n    window.addEventListener('resize', this.resize, { passive: true });\r\n  }\r\n\r\n  componentDidUpdate(preProps?: TagCloudProps) {\r\n    const { data } = this.props;\r\n    if (preProps && JSON.stringify(preProps.data) !== JSON.stringify(data)) {\r\n      this.renderChart(this.props);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isUnmount = true;\r\n    window.cancelAnimationFrame(this.requestRef);\r\n    window.removeEventListener('resize', this.resize);\r\n  }\r\n\r\n  resize = () => {\r\n    this.requestRef = requestAnimationFrame(() => {\r\n      this.renderChart(this.props);\r\n    });\r\n  };\r\n\r\n  saveRootRef = (node: HTMLDivElement) => {\r\n    this.root = node;\r\n  };\r\n\r\n  initTagCloud = () => {\r\n    function getTextAttrs(cfg: {\r\n      x?: any;\r\n      y?: any;\r\n      style?: any;\r\n      opacity?: any;\r\n      origin?: any;\r\n      color?: any;\r\n    }) {\r\n      return {\r\n        ...cfg.style,\r\n        fillOpacity: cfg.opacity,\r\n        fontSize: cfg.origin._origin.size,\r\n        rotate: cfg.origin._origin.rotate,\r\n        text: cfg.origin._origin.text,\r\n        textAlign: 'center',\r\n        fontFamily: cfg.origin._origin.font,\r\n        fill: cfg.color,\r\n        textBaseline: 'Alphabetic',\r\n      };\r\n    }\r\n\r\n    (Shape as any).registerShape('point', 'cloud', {\r\n      drawShape(\r\n        cfg: { x: any; y: any },\r\n        container: { addShape: (arg0: string, arg1: { attrs: any }) => void },\r\n      ) {\r\n        const attrs = getTextAttrs(cfg);\r\n        return container.addShape('text', {\r\n          attrs: {\r\n            ...attrs,\r\n            x: cfg.x,\r\n            y: cfg.y,\r\n          },\r\n        });\r\n      },\r\n    });\r\n  };\r\n\r\n  renderChart = Debounce((nextProps: TagCloudProps) => {\r\n    // const colors = ['#1890FF', '#41D9C7', '#2FC25B', '#FACC14', '#9AE65C'];\r\n    const { data, height } = nextProps || this.props;\r\n\r\n    if (data.length < 1 || !this.root) {\r\n      return;\r\n    }\r\n\r\n    const h = height;\r\n    const w = this.root.offsetWidth;\r\n\r\n    const onload = () => {\r\n      const dv = new DataSet.View().source(data);\r\n      const range = dv.range('value');\r\n      const [min, max] = range;\r\n      dv.transform({\r\n        type: 'tag-cloud',\r\n        fields: ['name', 'value'],\r\n        imageMask: this.imageMask,\r\n        font: 'Verdana',\r\n        size: [w, h], // 宽高设置最好根据 imageMask 做调整\r\n        padding: 0,\r\n        timeInterval: 5000, // max execute time\r\n        rotate() {\r\n          return 0;\r\n        },\r\n        fontSize(d: { value: number }) {\r\n          const size = ((d.value - min) / (max - min)) ** 2;\r\n          return size * (17.5 - 5) + 5;\r\n        },\r\n      });\r\n\r\n      if (this.isUnmount) {\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        dv,\r\n        width: w,\r\n        height: h,\r\n      });\r\n    };\r\n\r\n    if (!this.imageMask) {\r\n      this.imageMask = new Image();\r\n      this.imageMask.crossOrigin = '';\r\n      this.imageMask.src = imgUrl;\r\n\r\n      this.imageMask.onload = onload;\r\n    } else {\r\n      onload();\r\n    }\r\n  }, 500);\r\n\r\n  render() {\r\n    const { className, height } = this.props;\r\n    const { dv, width, height: stateHeight } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className={classNames('tagCloud', className)}\r\n        style={{ width: '100%', height }}\r\n        ref={this.saveRootRef}\r\n      >\r\n        {dv && (\r\n          <Chart\r\n            width={width}\r\n            height={stateHeight}\r\n            data={dv}\r\n            padding={0}\r\n            scale={{\r\n              x: { nice: false },\r\n              y: { nice: false },\r\n            }}\r\n          >\r\n            <Tooltip showTitle={false} />\r\n            <Coord reflect=\"y\" />\r\n            <Geom\r\n              type=\"point\"\r\n              position=\"x*y\"\r\n              color=\"text\"\r\n              shape=\"cloud\"\r\n              tooltip={[\r\n                'text*value',\r\n                function trans(text, value) {\r\n                  return { name: text, value };\r\n                },\r\n              ]}\r\n            />\r\n          </Chart>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default autoHeight()(TagCloud);\r\n","import { Axis, Chart, Geom, Legend, Tooltip } from 'bizcharts';\r\n\r\nimport DataSet from '@antv/data-set';\r\nimport React from 'react';\r\nimport Slider from 'bizcharts-plugin-slider';\r\nimport autoHeight from '../autoHeight';\r\nimport  './pk.css';\r\n\r\nexport interface TimelineChartProps {\r\n  data: {\r\n    x: number;\r\n    y1: number;\r\n    y2: number;\r\n  }[];\r\n  title?: string;\r\n  titleMap: { y1: string; y2: string };\r\n  padding?: [number, number, number, number];\r\n  height?: number;\r\n  style?: React.CSSProperties;\r\n  borderWidth?: number;\r\n}\r\n\r\nconst TimelineChart: React.FC<TimelineChartProps> = props => {\r\n  const {\r\n    title,\r\n    height = 400,\r\n    padding = [60, 20, 40, 40] as [number, number, number, number],\r\n    titleMap = {\r\n      y1: 'y1',\r\n      y2: 'y2',\r\n    },\r\n    borderWidth = 2,\r\n    data: sourceData,\r\n  } = props;\r\n\r\n  const data = Array.isArray(sourceData) ? sourceData : [{ x: 0, y1: 0, y2: 0 }];\r\n\r\n  data.sort((a, b) => a.x - b.x);\r\n\r\n  let max;\r\n  if (data[0] && data[0].y1 && data[0].y2) {\r\n    max = Math.max(\r\n      [...data].sort((a, b) => b.y1 - a.y1)[0].y1,\r\n      [...data].sort((a, b) => b.y2 - a.y2)[0].y2,\r\n    );\r\n  }\r\n\r\n  const ds = new DataSet({\r\n    state: {\r\n      start: data[0].x,\r\n      end: data[data.length - 1].x,\r\n    },\r\n  });\r\n\r\n  const dv = ds.createView();\r\n  dv.source(data)\r\n    .transform({\r\n      type: 'filter',\r\n      callback: (obj: { x: string }) => {\r\n        const date = obj.x;\r\n        return date <= ds.state.end && date >= ds.state.start;\r\n      },\r\n    })\r\n    .transform({\r\n      type: 'map',\r\n      callback(row: { y1: string; y2: string }) {\r\n        const newRow = { ...row };\r\n        // @ts-ignore\r\n        newRow[titleMap.y1] = row.y1;\r\n        // @ts-ignore\r\n        newRow[titleMap.y2] = row.y2;\r\n        return newRow;\r\n      },\r\n    })\r\n    .transform({\r\n      type: 'fold',\r\n      fields: [titleMap.y1, titleMap.y2], // 展开字段集\r\n      key: 'key', // key字段\r\n      value: 'value', // value字段\r\n    });\r\n\r\n  const timeScale = {\r\n    type: 'time',\r\n    tickInterval: 60 * 60 * 1000,\r\n    mask: 'HH:mm',\r\n    range: [0, 1],\r\n  };\r\n\r\n  const cols = {\r\n    x: timeScale,\r\n    value: {\r\n      max,\r\n      min: 0,\r\n    },\r\n  };\r\n\r\n  const SliderGen = () => (\r\n    <Slider\r\n      padding={[0, padding[1] + 20, 0, padding[3]]}\r\n      width=\"auto\"\r\n      height={26}\r\n      xAxis=\"x\"\r\n      yAxis=\"y1\"\r\n      scales={{ x: timeScale }}\r\n      data={data}\r\n      start={ds.state.start}\r\n      end={ds.state.end}\r\n      backgroundChart={{ type: 'line' }}\r\n      onChange={({ startValue, endValue }: { startValue: string; endValue: string }) => {\r\n        ds.setState('start', startValue);\r\n        ds.setState('end', endValue);\r\n      }}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <div className='timelineChart' style={{ height: height + 30 }}>\r\n      <div>\r\n        {title && <h4>{title}</h4>}\r\n        <Chart height={height} padding={padding} data={dv} scale={cols} forceFit>\r\n          <Axis name=\"x\" />\r\n          <Tooltip />\r\n          <Legend name=\"key\" position=\"top\" />\r\n          <Geom type=\"line\" position=\"x*value\" size={borderWidth} color=\"key\" />\r\n        </Chart>\r\n        <div style={{ marginRight: -20 }}>\r\n          <SliderGen />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default autoHeight()(TimelineChart);\r\n","import React, { Component } from 'react';\n\nimport autoHeight from '../autoHeight';\nimport  './pk.css';\n\n/* eslint no-return-assign: 0 */\n/* eslint no-mixed-operators: 0 */\n// riddle: https://riddle.alibaba-inc.com/riddles/2d9a4b90\n\nexport interface WaterWaveProps {\n  title: React.ReactNode;\n  color?: string;\n  height?: number;\n  percent: number;\n  style?: React.CSSProperties;\n}\n\nclass WaterWave extends Component<WaterWaveProps> {\n  state = {\n    radio: 1,\n  };\n\n  timer: number = 0;\n\n  root: HTMLDivElement | undefined | null = null;\n\n  node: HTMLCanvasElement | undefined | null = null;\n\n  componentDidMount() {\n    this.renderChart();\n    this.resize();\n    window.addEventListener(\n      'resize',\n      () => {\n        requestAnimationFrame(() => this.resize());\n      },\n      { passive: true },\n    );\n  }\n\n  componentDidUpdate(props: WaterWaveProps) {\n    const { percent } = this.props;\n    if (props.percent !== percent) {\n      // 不加这个会造成绘制缓慢\n      this.renderChart('update');\n    }\n  }\n\n  componentWillUnmount() {\n    cancelAnimationFrame(this.timer);\n    if (this.node) {\n      this.node.innerHTML = '';\n    }\n    window.removeEventListener('resize', this.resize);\n  }\n\n  resize = () => {\n    if (this.root) {\n      const { height = 1 } = this.props;\n      const { offsetWidth } = this.root.parentNode as HTMLElement;\n      this.setState({\n        radio: offsetWidth < height ? offsetWidth / height : 1,\n      });\n    }\n  };\n\n  renderChart(type?: string) {\n    const { percent, color = '#1890FF' } = this.props;\n    const data = percent / 100;\n    const self = this;\n    cancelAnimationFrame(this.timer);\n\n    if (!this.node || (data !== 0 && !data)) {\n      return;\n    }\n\n    const canvas = this.node;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      return;\n    }\n    const canvasWidth = canvas.width;\n    const canvasHeight = canvas.height;\n    const radius = canvasWidth / 2;\n    const lineWidth = 2;\n    const cR = radius - lineWidth;\n\n    ctx.beginPath();\n    ctx.lineWidth = lineWidth * 2;\n\n    const axisLength = canvasWidth - lineWidth;\n    const unit = axisLength / 8;\n    const range = 0.2; // 振幅\n    let currRange = range;\n    const xOffset = lineWidth;\n    let sp = 0; // 周期偏移量\n    let currData = 0;\n    const waveupsp = 0.005; // 水波上涨速度\n\n    let arcStack: number[][] = [];\n    const bR = radius - lineWidth;\n    const circleOffset = -(Math.PI / 2);\n    let circleLock = true;\n\n    for (let i = circleOffset; i < circleOffset + 2 * Math.PI; i += 1 / (8 * Math.PI)) {\n      arcStack.push([radius + bR * Math.cos(i), radius + bR * Math.sin(i)]);\n    }\n\n    const cStartPoint = arcStack.shift() as number[];\n    ctx.strokeStyle = color;\n    ctx.moveTo(cStartPoint[0], cStartPoint[1]);\n\n    function drawSin() {\n      if (!ctx) {\n        return;\n      }\n      ctx.beginPath();\n      ctx.save();\n\n      const sinStack = [];\n      for (let i = xOffset; i <= xOffset + axisLength; i += 20 / axisLength) {\n        const x = sp + (xOffset + i) / unit;\n        const y = Math.sin(x) * currRange;\n        const dx = i;\n        const dy = 2 * cR * (1 - currData) + (radius - cR) - unit * y;\n\n        ctx.lineTo(dx, dy);\n        sinStack.push([dx, dy]);\n      }\n\n      const startPoint = sinStack.shift() as number[];\n\n      ctx.lineTo(xOffset + axisLength, canvasHeight);\n      ctx.lineTo(xOffset, canvasHeight);\n      ctx.lineTo(startPoint[0], startPoint[1]);\n\n      const gradient = ctx.createLinearGradient(0, 0, 0, canvasHeight);\n      gradient.addColorStop(0, '#ffffff');\n      gradient.addColorStop(1, color);\n      ctx.fillStyle = gradient;\n      ctx.fill();\n      ctx.restore();\n    }\n\n    function render() {\n      if (!ctx) {\n        return;\n      }\n      ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n      if (circleLock && type !== 'update') {\n        if (arcStack.length) {\n          const temp = arcStack.shift() as number[];\n          ctx.lineTo(temp[0], temp[1]);\n          ctx.stroke();\n        } else {\n          circleLock = false;\n          ctx.lineTo(cStartPoint[0], cStartPoint[1]);\n          ctx.stroke();\n          arcStack = [];\n\n          ctx.globalCompositeOperation = 'destination-over';\n          ctx.beginPath();\n          ctx.lineWidth = lineWidth;\n          ctx.arc(radius, radius, bR, 0, 2 * Math.PI, true);\n\n          ctx.beginPath();\n          ctx.save();\n          ctx.arc(radius, radius, radius - 3 * lineWidth, 0, 2 * Math.PI, true);\n\n          ctx.restore();\n          ctx.clip();\n          ctx.fillStyle = color;\n        }\n      } else {\n        if (data >= 0.85) {\n          if (currRange > range / 4) {\n            const t = range * 0.01;\n            currRange -= t;\n          }\n        } else if (data <= 0.1) {\n          if (currRange < range * 1.5) {\n            const t = range * 0.01;\n            currRange += t;\n          }\n        } else {\n          if (currRange <= range) {\n            const t = range * 0.01;\n            currRange += t;\n          }\n          if (currRange >= range) {\n            const t = range * 0.01;\n            currRange -= t;\n          }\n        }\n        if (data - currData > 0) {\n          currData += waveupsp;\n        }\n        if (data - currData < 0) {\n          currData -= waveupsp;\n        }\n\n        sp += 0.07;\n        drawSin();\n      }\n      self.timer = requestAnimationFrame(render);\n    }\n    render();\n  }\n\n  render() {\n    const { radio } = this.state;\n    const { percent, title, height = 1 } = this.props;\n    return (\n      <div\n        className='waterWave'\n        ref={n => (this.root = n)}\n        style={{ transform: `scale(${radio})` }}\n      >\n        <div style={{ width: height, height, overflow: 'hidden' }}>\n          <canvas\n            className='waterWaveCanvasWrapper'\n            ref={n => (this.node = n)}\n            width={height * 2}\n            height={height * 2}\n          />\n        </div>\n        <div className='text' style={{ width: height }}>\n          {title && <span>{title}</span>}\n          <h4>{percent}%</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default autoHeight()(WaterWave);\n","import numeral from 'numeral';\r\nimport Bar from './Bar';\r\nimport ChartCard from './ChartCard';\r\nimport Field from './Field';\r\nimport Gauge from './Gauge';\r\nimport MiniArea from './MiniArea';\r\nimport MiniBar from './MiniBar';\r\nimport MiniProgress from './MiniProgress';\r\nimport Pie from './Pie';\r\nimport TagCloud from './TagCloud';\r\nimport TimelineChart from './TimelineChart';\r\nimport WaterWave from './WaterWave';\r\n\r\nconst yuan = (val: number | string) => `¥ ${numeral(val).format('0,0')}`;\r\n\r\nconst Charts = {\r\n  yuan,\r\n  Bar,\r\n  Pie,\r\n  Gauge,\r\n  MiniBar,\r\n  MiniArea,\r\n  MiniProgress,\r\n  ChartCard,\r\n  Field,\r\n  WaterWave,\r\n  TagCloud,\r\n  TimelineChart,\r\n};\r\n\r\nexport {\r\n  Charts as default,\r\n  yuan,\r\n  Bar,\r\n  Pie,\r\n  Gauge,\r\n  MiniBar,\r\n  MiniArea,\r\n  MiniProgress,\r\n  ChartCard,\r\n  Field,\r\n  WaterWave,\r\n  TagCloud,\r\n  TimelineChart,\r\n};\r\n","module.exports = __webpack_public_path__ + \"static/media/index.14eef15e.less\";","module.exports = __webpack_public_path__ + \"static/media/index.e447c9bf.less\";"],"sourceRoot":""}