{"version":3,"sources":["DashboardAnalysis/components/NumberInfo/index.tsx","DashboardAnalysis/components/OfflineData.tsx"],"names":["NumberInfo","theme","title","subTitle","total","subTotal","status","suffix","gap","rest","className","classNames","style","marginTop","type","CustomTab","data","currentKey","currentTabKey","gutter","width","margin","span","name","cvr","undefined","paddingTop","animate","inner","tooltip","percent","height","TabPane","Tabs","OfflineData","activeKey","loading","offlineData","offlineChartData","handleTabChange","bordered","onChange","map","shop","tab","key","padding","titleMap","y1","y2"],"mappings":"qLA6DeA,IA7C+B,SAAC,GAAD,IAC5CC,EAD4C,EAC5CA,MACAC,EAF4C,EAE5CA,MACAC,EAH4C,EAG5CA,SACAC,EAJ4C,EAI5CA,MACAC,EAL4C,EAK5CA,SACAC,EAN4C,EAM5CA,OACAC,EAP4C,EAO5CA,OACAC,EAR4C,EAQ5CA,IACGC,EATyC,8FAW5C,uCACEC,UAAWC,IAAW,aAAD,mCACLV,GAAUA,KAEtBQ,GAEHP,GACC,yBAAKQ,UAAU,kBAAkBR,MAAwB,kBAAVA,EAAqBA,EAAQ,IACzEA,GAGJC,GACC,yBACEO,UAAU,qBACVR,MAA2B,kBAAbC,EAAwBA,EAAW,IAEhDA,GAGL,yBAAKO,UAAU,kBAAkBE,MAAOJ,EAAM,CAAEK,UAAWL,GAAQ,IACjE,8BACGJ,EACAG,GAAU,wBAAIG,UAAU,UAAUH,KAEnCD,GAAUD,IACV,0BAAMK,UAAU,YACbL,EACAC,GAAU,kBAAC,IAAD,CAAMQ,KAAI,gBAAWR,U,uDCtD1C,gFAQMS,GARN,OAQkB,SAAC,GAAD,IAChBC,EADgB,EAChBA,KACeC,EAFC,EAEhBC,cAFgB,OAOhB,kBAAC,IAAD,CAAKC,OAAQ,EAAGP,MAAO,CAAEQ,MAAO,IAAKC,OAAQ,SAAWP,KAAK,QAC3D,kBAAC,IAAD,CAAKQ,KAAM,IACT,kBAAC,IAAD,CACEpB,MAAOc,EAAKO,KACZpB,SAAS,kBACTK,IAAK,EACLJ,MAAK,UAAgB,IAAXY,EAAKQ,IAAV,KACLvB,MAAOgB,IAAeD,EAAKO,KAAO,aAAUE,KAGhD,kBAAC,IAAD,CAAKH,KAAM,GAAIV,MAAO,CAAEc,WAAY,KAClC,kBAAC,IAAD,CACEC,SAAS,EACTC,MAAO,IACPC,SAAS,EACTR,OAAQ,CAAC,EAAG,EAAG,EAAG,GAClBS,QAAoB,IAAXd,EAAKQ,IACdO,OAAQ,SAMRC,EAAYC,IAAZD,QAmCOE,UAjCK,SAAC,GAAD,IAClBC,EADkB,EAClBA,UACAC,EAFkB,EAElBA,QACAC,EAHkB,EAGlBA,YACAC,EAJkB,EAIlBA,iBACAC,EALkB,EAKlBA,gBALkB,OAalB,kBAAC,IAAD,CAAMH,QAASA,EAAS1B,UAAU,cAAc8B,UAAU,EAAO5B,MAAO,CAAEC,UAAW,KACnF,kBAAC,IAAD,CAAMsB,UAAWA,EAAWM,SAAUF,GACnCF,EAAYK,KAAI,SAAAC,GAAI,OACnB,kBAACX,EAAD,CAASY,IAAK,kBAAC7B,EAAD,CAAWC,KAAM2B,EAAMzB,cAAeiB,IAAeU,IAAKF,EAAKpB,MAC3E,yBAAKX,MAAO,CAAEkC,QAAS,WACrB,kBAAC,IAAD,CACEf,OAAQ,IACRf,KAAMsB,EACNS,SAAU,CACRC,GAAI,UACJC,GAAI","file":"static/js/7.1f280fc8.chunk.js","sourcesContent":["import { Icon } from 'antd';\r\nimport React from 'react';\r\nimport classNames from 'classnames';\r\nimport './pk.css';\r\n\r\nexport interface NumberInfoProps {\r\n  title?: React.ReactNode | string;\r\n  subTitle?: React.ReactNode | string;\r\n  total?: React.ReactNode | string;\r\n  status?: 'up' | 'down';\r\n  theme?: string;\r\n  gap?: number;\r\n  subTotal?: number;\r\n  suffix?: string;\r\n  style?: React.CSSProperties;\r\n}\r\nconst NumberInfo: React.FC<NumberInfoProps> = ({\r\n  theme,\r\n  title,\r\n  subTitle,\r\n  total,\r\n  subTotal,\r\n  status,\r\n  suffix,\r\n  gap,\r\n  ...rest\r\n}) => (\r\n  <div\r\n    className={classNames('numberInfo', {\r\n      [`numberInfo${theme}`]: theme,\r\n    })}\r\n    {...rest}\r\n  >\r\n    {title && (\r\n      <div className='numberInfoTitle' title={typeof title === 'string' ? title : ''}>\r\n        {title}\r\n      </div>\r\n    )}\r\n    {subTitle && (\r\n      <div\r\n        className='numberInfoSubTitle'\r\n        title={typeof subTitle === 'string' ? subTitle : ''}\r\n      >\r\n        {subTitle}\r\n      </div>\r\n    )}\r\n    <div className='numberInfoValue' style={gap ? { marginTop: gap } : {}}>\r\n      <span>\r\n        {total}\r\n        {suffix && <em className='suffix'>{suffix}</em>}\r\n      </span>\r\n      {(status || subTotal) && (\r\n        <span className='subTotal'>\r\n          {subTotal}\r\n          {status && <Icon type={`caret-${status}`} />}\r\n        </span>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default NumberInfo;\r\n","import { Card, Col, Row, Tabs } from 'antd';\nimport React from 'react';\nimport { OfflineChartData, OfflineDataType } from '../data.d';\n\nimport { TimelineChart, Pie } from './Charts';\nimport NumberInfo from './NumberInfo';\nimport  '../style.css';\n\nconst CustomTab = ({\n  data,\n  currentTabKey: currentKey,\n}: {\n  data: OfflineDataType;\n  currentTabKey: string;\n}) => (\n  <Row gutter={8} style={{ width: 138, margin: '8px 0' }} type=\"flex\">\n    <Col span={12}>\n      <NumberInfo\n        title={data.name}\n        subTitle='Conversion Rate'\n        gap={2}\n        total={`${data.cvr * 100}%`}\n        theme={currentKey !== data.name ? 'light' : undefined}\n      />\n    </Col>\n    <Col span={12} style={{ paddingTop: 36 }}>\n      <Pie\n        animate={false}\n        inner={0.55}\n        tooltip={false}\n        margin={[0, 0, 0, 0]}\n        percent={data.cvr * 100}\n        height={64}\n      />\n    </Col>\n  </Row>\n);\n\nconst { TabPane } = Tabs;\n\nconst OfflineData = ({\n  activeKey,\n  loading,\n  offlineData,\n  offlineChartData,\n  handleTabChange,\n}: {\n  activeKey: string;\n  loading: boolean;\n  offlineData: OfflineDataType[];\n  offlineChartData: OfflineChartData[];\n  handleTabChange: (activeKey: string) => void;\n}) => (\n  <Card loading={loading} className='offlineCard' bordered={false} style={{ marginTop: 32 }}>\n    <Tabs activeKey={activeKey} onChange={handleTabChange}>\n      {offlineData.map(shop => (\n        <TabPane tab={<CustomTab data={shop} currentTabKey={activeKey} />} key={shop.name}>\n          <div style={{ padding: '0 24px' }}>\n            <TimelineChart\n              height={400}\n              data={offlineChartData}\n              titleMap={{\n                y1: 'traffic',\n                y2: 'payments',\n              }}\n            />\n          </div>\n        </TabPane>\n      ))}\n    </Tabs>\n  </Card>\n);\n\nexport default OfflineData;\n"],"sourceRoot":""}