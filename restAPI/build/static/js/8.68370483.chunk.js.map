{"version":3,"sources":["DashboardAnalysis/utils/Yuan.tsx","DashboardAnalysis/components/ProportionSales.tsx"],"names":["Yuan","main","renderToHtml","children","props","innerHTML","yuan","this","ref","React","Component","ProportionSales","dropdownGroup","salesType","loading","salesPieData","handleChangeSalesType","className","bordered","title","style","height","extra","Group","value","onChange","Button","marginTop","marginBottom","hasLegend","subTitle","total","reduce","pre","now","y","data","valueFormat","lineWidth"],"mappings":"4MAGqBA,E,2MAGjBC,KAA2C,K,EAU3CC,aAAe,WAAO,IACVC,EAAa,EAAKC,MAAlBD,SACJ,EAAKF,OACL,EAAKA,KAAKI,UAAYC,YAAKH,K,mFAV/BI,KAAKL,iB,2CAILK,KAAKL,iB,+BAUC,IAAD,OACL,OACI,0BACIM,IAAK,SAAAA,GACD,EAAKP,KAAOO,S,GAxBEC,IAAMC,W,OC6DzBC,UAvDS,SAAC,GAAD,IACKC,EADL,EACKA,cACAC,EAFL,EAEKA,UACAC,EAHL,EAGKA,QACAC,EAJL,EAIKA,aACAC,EALL,EAKKA,sBALL,OAapB,kBAAC,IAAD,CACIF,QAASA,EACTG,UAAU,YACVC,UAAU,EACVC,MAAM,0BACNC,MAAO,CACHC,OAAQ,QAEZC,MACI,yBAAKL,UAAU,kBACP,kBAAC,IAAMM,MAAP,CAAaC,MAAOX,EAAWY,SAAUT,GACrC,kBAAC,IAAMU,OAAP,CAAcF,MAAM,OAApB,OAGA,kBAAC,IAAME,OAAP,CAAcF,MAAM,UAApB,UAGA,kBAAC,IAAME,OAAP,CAAcF,MAAM,UAApB,WAIHZ,IAIb,6BACI,wBAAIQ,MAAO,CAACO,UAAW,EAAGC,aAAc,KAAxC,SAGA,kBAAC,IAAD,CACIC,WAAS,EACTC,SAAS,QACTC,MAAO,kBAAM,kBAAC,EAAD,KAAOhB,EAAaiB,QAAO,SAACC,EAAKC,GAAN,OAAcA,EAAIC,EAAIF,IAAK,KACnEG,KAAMrB,EACNsB,YAAa,SAAAb,GAAK,OAAI,kBAAC,EAAD,KAAOA,IAC7BH,OAAQ,IACRiB,UAAW","file":"static/js/8.68370483.chunk.js","sourcesContent":["import React from 'react';\r\nimport { yuan } from '../components/Charts';\r\n\r\nexport default class Yuan extends React.Component<{\r\n    children: React.ReactText;\r\n}> {\r\n    main: HTMLSpanElement | undefined | null = null;\r\n\r\n    componentDidMount() {\r\n        this.renderToHtml();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.renderToHtml();\r\n    }\r\n\r\n    renderToHtml = () => {\r\n        const { children } = this.props;\r\n        if (this.main) {\r\n            this.main.innerHTML = yuan(children);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span\r\n                ref={ref => {\r\n                    this.main = ref;\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import {Card, Radio} from 'antd';\r\n\r\nimport {RadioChangeEvent} from 'antd/es/radio';\r\nimport React from 'react';\r\nimport {VisitDataType} from '../data.d';\r\nimport {Pie} from './Charts';\r\nimport Yuan from '../utils/Yuan';\r\nimport '../style.css';\r\n\r\nconst ProportionSales = ({\r\n                             dropdownGroup,\r\n                             salesType,\r\n                             loading,\r\n                             salesPieData,\r\n                             handleChangeSalesType,\r\n                         }: {\r\n    loading: boolean;\r\n    dropdownGroup: React.ReactNode;\r\n    salesType: 'all' | 'online' | 'stores';\r\n    salesPieData: VisitDataType[];\r\n    handleChangeSalesType?: (e: RadioChangeEvent) => void;\r\n}) => (\r\n    <Card\r\n        loading={loading}\r\n        className='salesCard'\r\n        bordered={false}\r\n        title='The Proportion of Sales'\r\n        style={{\r\n            height: '100%',\r\n        }}\r\n        extra={\r\n            <div className='salesCardExtra'>\r\n                    <Radio.Group value={salesType} onChange={handleChangeSalesType}>\r\n                        <Radio.Button value=\"all\">\r\n                            ALL\r\n                        </Radio.Button>\r\n                        <Radio.Button value=\"online\">\r\n                            Online\r\n                        </Radio.Button>\r\n                        <Radio.Button value=\"stores\">\r\n                            Stores\r\n                        </Radio.Button>\r\n                    </Radio.Group>\r\n                    {dropdownGroup}\r\n            </div>\r\n        }\r\n    >\r\n        <div>\r\n            <h4 style={{marginTop: 8, marginBottom: 32}}>\r\n                Sales\r\n            </h4>\r\n            <Pie\r\n                hasLegend\r\n                subTitle='Sales'\r\n                total={() => <Yuan>{salesPieData.reduce((pre, now) => now.y + pre, 0)}</Yuan>}\r\n                data={salesPieData}\r\n                valueFormat={value => <Yuan>{value}</Yuan>}\r\n                height={248}\r\n                lineWidth={4}\r\n            />\r\n        </div>\r\n    </Card>\r\n);\r\n\r\nexport default ProportionSales;\r\n"],"sourceRoot":""}