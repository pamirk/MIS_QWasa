{"version":3,"sources":["DashboardAnalysis/components/SalesCard.tsx"],"names":["RangePicker","DatePicker","TabPane","Tabs","rankingListData","i","push","title","total","SalesCard","rangePickerValue","salesData","isActive","handleRangePickerChange","loading","selectDate","bordered","bodyStyle","padding","className","tabBarExtraContent","onClick","value","onChange","style","width","size","tabBarStyle","marginBottom","tab","key","type","xl","lg","md","sm","xs","height","data","map","item","numeral","format"],"mappings":"kHAAA,OAaA,IAbA,2FASQA,GATR,OASwBC,IAAhBD,aACAE,EAAYC,IAAZD,QAEFE,EAAsD,GACnDC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,EAAgBE,KAAK,CACnBC,MAAQ,IACRC,MAAO,SAiIIC,UA7HG,SAAC,GAAD,IACGC,EADH,EACGA,iBACAC,EAFH,EAEGA,UACAC,EAHH,EAGGA,SACAC,EAJH,EAIGA,wBACAC,EALH,EAKGA,QACAC,EANH,EAMGA,WANH,OAed,kBAAC,IAAD,CAAMD,QAASA,EAASE,UAAU,EAAOC,UAAW,CAAEC,QAAS,IAC7D,yBAAKC,UAAU,aACb,kBAAC,IAAD,CACIC,mBACE,yBAAKD,UAAU,kBACb,yBAAKA,UAAU,cACb,uBAAGA,UAAWP,EAAS,SAAUS,QAAS,kBAAMN,EAAW,WAA3D,WAGA,uBAAGI,UAAWP,EAAS,QAASS,QAAS,kBAAMN,EAAW,UAA1D,YAGA,uBAAGI,UAAWP,EAAS,SAAUS,QAAS,kBAAMN,EAAW,WAA3D,aAGA,uBAAGI,UAAWP,EAAS,QAASS,QAAS,kBAAMN,EAAW,UAA1D,aAIF,kBAACf,EAAD,CACIsB,MAAOZ,EACPa,SAAUV,EACVW,MAAO,CAAEC,MAAO,QAIxBC,KAAK,QACLC,YAAa,CAAEC,aAAc,KAE/B,kBAAC1B,EAAD,CACI2B,IAAI,aACJC,IAAI,SAEN,kBAAC,IAAD,CAAKC,KAAK,QACR,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,yBAAKjB,UAAU,YACb,kBAAC,IAAD,CACIkB,OAAQ,IACR9B,MAAM,mBAEN+B,KAAM3B,MAId,kBAAC,IAAD,CAAKqB,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACtC,yBAAKjB,UAAU,aACb,wBAAIA,UAAU,gBAAd,sBAGA,wBAAIA,UAAU,eACXf,EAAgBmC,KAAI,SAACC,EAAMnC,GAAP,OACjB,wBAAIyB,IAAKU,EAAKjC,OAChB,0BAAMY,UAAS,4BAAuBd,EAAI,EAAI,SAAW,KACtDA,EAAI,GAEH,0BAAMc,UAAU,mBAAmBZ,MAAOiC,EAAKjC,OAChDiC,EAAKjC,OAEJ,0BAAMY,UAAU,oBACjBsB,IAAQD,EAAKhC,OAAOkC,OAAO,iBAS1C,kBAACxC,EAAD,CACI2B,IAAI,SACJC,IAAI,SAEN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKE,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACvC,yBAAKjB,UAAU,YACb,kBAAC,IAAD,CACIkB,OAAQ,IACR9B,MAAM,eAEN+B,KAAM3B,MAId,kBAAC,IAAD,CAAKqB,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,IACtC,yBAAKjB,UAAU,aACb,wBAAIA,UAAU,gBAAd,kBAGA,wBAAIA,UAAU,eACXf,EAAgBmC,KAAI,SAACC,EAAMnC,GAAP,OACjB,wBAAIyB,IAAKU,EAAKjC,OAChB,0BAAMY,UAAS,4BAAuBd,EAAI,EAAI,SAAW,KACtDA,EAAI,GAEH,0BAAMc,UAAU,mBAAmBZ,MAAOiC,EAAKjC,OAChDiC,EAAKjC,OAEJ,8BAAOkC,IAAQD,EAAKhC,OAAOkC,OAAO","file":"static/js/9.c7825f10.chunk.js","sourcesContent":["import { Card, Col, DatePicker, Row, Tabs } from 'antd';\r\n\r\nimport { RangePickerValue } from 'antd/es/date-picker/interface';\r\nimport React from 'react';\r\nimport numeral from 'numeral';\r\nimport { VisitDataType } from '../data';\r\nimport { Bar } from './Charts';\r\nimport  '../style.css';\r\n\r\nconst { RangePicker } = DatePicker;\r\nconst { TabPane } = Tabs;\r\n\r\nconst rankingListData: { title: string; total: number }[] = [];\r\nfor (let i = 0; i < 7; i += 1) {\r\n  rankingListData.push({\r\n    title:  \" \",\r\n    total: 323234,\r\n  });\r\n}\r\n\r\nconst SalesCard = ({\r\n                     rangePickerValue,\r\n                     salesData,\r\n                     isActive,\r\n                     handleRangePickerChange,\r\n                     loading,\r\n                     selectDate,\r\n                   }: {\r\n  rangePickerValue: RangePickerValue;\r\n  isActive: (key: 'today' | 'week' | 'month' | 'year') => string;\r\n  salesData: VisitDataType[];\r\n  loading: boolean;\r\n  handleRangePickerChange: (dates: RangePickerValue, dateStrings: [string, string]) => void;\r\n  selectDate: (key: 'today' | 'week' | 'month' | 'year') => void;\r\n}) => (\r\n    <Card loading={loading} bordered={false} bodyStyle={{ padding: 0 }}>\r\n      <div className='salesCard'>\r\n        <Tabs\r\n            tabBarExtraContent={\r\n              <div className='salesExtraWrap'>\r\n                <div className='salesExtra'>\r\n                  <a className={isActive('today')} onClick={() => selectDate('today')}>\r\n                    All Day\r\n                  </a>\r\n                  <a className={isActive('week')} onClick={() => selectDate('week')}>\r\n                    All Week\r\n                  </a>\r\n                  <a className={isActive('month')} onClick={() => selectDate('month')}>\r\n                    All Month\r\n                  </a>\r\n                  <a className={isActive('year')} onClick={() => selectDate('year')}>\r\n                    All Year\r\n                  </a>\r\n                </div>\r\n                <RangePicker\r\n                    value={rangePickerValue}\r\n                    onChange={handleRangePickerChange}\r\n                    style={{ width: 256 }}\r\n                />\r\n              </div>\r\n            }\r\n            size=\"large\"\r\n            tabBarStyle={{ marginBottom: 24 }}\r\n        >\r\n          <TabPane\r\n              tab='Complaints'\r\n              key=\"sales\"\r\n          >\r\n            <Row type=\"flex\">\r\n              <Col xl={16} lg={12} md={12} sm={24} xs={24}>\r\n                <div className='salesBar'>\r\n                  <Bar\r\n                      height={295}\r\n                      title='Complaints Trend'\r\n\r\n                      data={salesData}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xl={8} lg={12} md={12} sm={24} xs={24}>\r\n                <div className='salesRank'>\r\n                  <h4 className='rankingTitle'>\r\n                    Complaints Ranking\r\n                  </h4>\r\n                  <ul className='rankingList'>\r\n                    {rankingListData.map((item, i) => (\r\n                        <li key={item.title}>\r\n                      <span className={`rankingItemNumber ${i < 3 ? 'active' : ''}`}>\r\n                        {i + 1}\r\n                      </span>\r\n                          <span className='rankingItemTitle' title={item.title}>\r\n                        {item.title}\r\n                      </span>\r\n                          <span className='rankingItemValue'>\r\n                        {numeral(item.total).format('0,0')}\r\n                      </span>\r\n                        </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane\r\n              tab='Visits'\r\n              key=\"views\"\r\n          >\r\n            <Row>\r\n              <Col xl={16} lg={12} md={12} sm={24} xs={24}>\r\n                <div className='salesBar'>\r\n                  <Bar\r\n                      height={292}\r\n                      title='Visits Trend'\r\n\r\n                      data={salesData}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col xl={8} lg={12} md={12} sm={24} xs={24}>\r\n                <div className='salesRank'>\r\n                  <h4 className='rankingTitle'>\r\n                    Visits Ranking\r\n                  </h4>\r\n                  <ul className='rankingList'>\r\n                    {rankingListData.map((item, i) => (\r\n                        <li key={item.title}>\r\n                      <span className={`rankingItemNumber ${i < 3 ? 'active' : ''}`}>\r\n                        {i + 1}\r\n                      </span>\r\n                          <span className='rankingItemTitle' title={item.title}>\r\n                        {item.title}\r\n                      </span>\r\n                          <span>{numeral(item.total).format('0,0')}</span>\r\n                        </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    </Card>\r\n);\r\n\r\nexport default SalesCard;\r\n"],"sourceRoot":""}